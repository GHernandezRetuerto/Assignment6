<style>
body {
    overflow: scroll;
}
</style>

<style>
  .chart .jreveal .state-background {
  background: black;
} 
</style>


Presentation - Stat2Data
========================================================
author: Guillermo Hernandez
date: 24-02-2021
autosize: true
font-family: Helvetica
css: style.css
transition: fade

<div align="bottom">
<img src="uc3mLogo.jpg">
</div>

Stat2Data
========================================================
navigation: section
incremental: true

Stat2Data is a package containing a huge amount of datasets extracted from the textbook Stat2: Modeling with Regression and ANOVA.

More information can be found in [CRAN website](https://cran.r-project.org/web/packages/Stat2Data/index.html8) and in the [reference PDF](https://cran.r-project.org/web/packages/Stat2Data/Stat2Data.pdf).

Some of these datasets include:

1. ~~CO2SouthPole~~ (the one we are going to use)
<li class='fragment fade-out'>Airlines</li>
<li class='fragment fade-out'>AppleStock</li>

The Dataset
========================================================

`CO2SouthPole` contains CO2 concentration measurements (in ppm) in a scientific settlement in Antarctica. 

```{r}
library(Stat2Data)

data(CO2SouthPole)
head(CO2SouthPole)
```

For the sake of the example, let's take the monthly data of 1988 and 1989 (only the month and the CO2 value). 

Data from 1988/1989
========================================================

## 1988
```{r echo = FALSE}
data1988 = CO2SouthPole[(CO2SouthPole$Year==1988),c(2,3)]
data1989 = CO2SouthPole[(CO2SouthPole$Year==1989),c(2,3)]
data1988
```
***
## 1989
```{r echo=FALSE}
data1989
```



Charts
========================================================
navigation: section
class: chart

```{r include=FALSE}
library(plotly)
library(ggplot2)
```

```{r echo=FALSE}
df = data.frame(cbind(data1988$Month, data1988$CO2, data1989$CO2))
colnames(df) = c('month','CO2_1998','CO2_1989')
p88 = ggplot(data = df, aes(x=month, y=CO2_1998))+
  theme_minimal()+
  geom_point()+
  coord_cartesian(xlim = c(1, 12))


p88 = ggplotly(p88)
p88
```
***
```{r echo=FALSE}
p89 = ggplot(data = df, aes(x=month, y=CO2_1989))+
  theme_minimal()+
  geom_point()+
  coord_cartesian(xlim = c(1, 12))

p89 = ggplotly(p89)
p89
```

Dual Chart for Comparison
========================================================
class: chart

The previous charts are almost wrong: x axis is numerical and cannot be interpreted easily, axis labels are too simple...
Here we design a good barplot for the two years simultaneously. 

```{r echo = FALSE, out.width="100%"}
library(tidyverse)
months=c('Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec')
df$month = factor(months, levels=unique(months))
# transform the data using dplyr and tidyr and plot the bars using fill to
# get the three bars per insurer. I used geom_col as it uses stat_identity as default

p = df %>% gather(key, value, -month) %>% 
    ggplot(aes(x=month, y=value, fill = key)) +
      geom_col(position = "dodge")+
      coord_cartesian(ylim = c(340, 353))+
      scale_fill_discrete(name = "Year", labels = c("1988", "1989"))+
      theme_minimal()+
      scale_fill_manual(values=c("springgreen","navy"))+
      labs(title = "CO2 in The South Pole by Month - 1988, 1989", x = 'Month', y = 'Concentration')

p = ggplotly(p)

p
```





